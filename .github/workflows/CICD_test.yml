# This is a basic workflow to help you get started with Actions

name: pythonでのCI(pytest)とCD

on:
  push:
    branches-ignore: 
      - master
      - develop
      - hotfix
  pull_request:
    branches:
      - '**'
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
     inputs:
       DeployBranch:
         description: 'DeployBranch'     
         required: true
         default: 'main'
       DeployEnv:
         description: 'DeployEnv'     
         required: true
         default: '開発'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
#       - name: Install pipenv
#         run: pip install pipenv
        
#       - name: Sync Pipfile.lock dev
#         run: pipenv sync --dev
        
#       - name: Run UnitTest
#         run: pipenv run test

      # https://docs.github.com/ja/actions/guides/storing-workflow-data-as-artifacts#uploading-build-and-test-artifacts
#       - name: Archive UnitTest result
#         uses: actions/upload-artifact@v2
#         with:
#           name: upload UnitTest result
#           path: reports/test.html

      - name: Deploy to EC2
        if: ${{ github.event.inputs.DeployBranch == '' }}
        env:
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: echo "$EC2_SSH_KEY" > ssh_secret_key && chmod 600 ssh_secret_key && ssh -oStrictHostKeyChecking=no ${EC2_USER}@${EC2_HOST} -i ssh_secret_key "cd /home/${EC2_USER}/django-trial && git pull origin main"
        
      - name: Deploy to EC2 by manually
        if: ${{ github.event.inputs.DeployBranch != '' && github.event.inputs.DeployEnv == '開発' }}
        env:
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_HOST: ${{ secrets.EC2_HOST }}        
        run: echo "$EC2_SSH_KEY" > ssh_secret_key && chmod 600 ssh_secret_key && ssh -oStrictHostKeyChecking=no ${EC2_USER}@${EC2_HOST} -i ssh_secret_key "cd /home/${EC2_USER}/django-trial && git pull origin ${{ github.event.inputs.DeployBranch }}"
