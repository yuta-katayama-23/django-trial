# This is a basic workflow to help you get started with Actions

name: pythonでのCI(pytest)とCD

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    
jobs:  
  build:
    runs-on: ubuntu-latest

    steps:          
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: fromJSON("[ 'test' ]")
        run: |
           echo ${{fromJSON(["test", "aaaa"])}}
      
      - name: Install pipenv
        run: pip install pipenv
        
      - name: Sync Pipfile.lock dev
        run: pipenv sync --dev
        
      - name: Run UnitTest
        run: pipenv run test

      # https://docs.github.com/ja/actions/guides/storing-workflow-data-as-artifacts#uploading-build-and-test-artifacts
      - name: Archive UnitTest result of test
        uses: actions/upload-artifact@v2
        with:
          name: upload UnitTest result of test
          path: |
            reports/test.html
            reports/coverage/
            
      # テスト成功時はこちらのステップが実行される
      - name: Slack Notification on Success
        if: success()
        run: |
          jq -n --arg jobLink "$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" '{
            attachments: [{
              pretext: "CI（pytest）の実行結果を通知します",
              color: "good",
              title: $jobLink,
              title_link: $jobLink,
              text: "pytestの結果は上記リンクから確認してください"
            }]
          }' | curl -X POST -H 'Content-Type: application/json' -d @- ${{ secrets.SLACK_WEBHOOK_URL }}
           
      # テスト失敗時はこちらのステップが実行される
      - name: Slack Notification on Failure
        if: failure()
        run: |
          jq -n --arg jobLink "$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" '{
            attachments: [{
              pretext: "CI（pytest）の実行結果を通知します",
              color: "danger",
              title: $jobLink,
              title_link: $jobLink,
              text: "pytestの結果は上記リンクから確認してください"
            }]
          }' | curl -H 'Content-Type: application/json' -d @- ${{ secrets.SLACK_WEBHOOK_URL }}
