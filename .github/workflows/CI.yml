# This is a basic workflow to help you get started with Actions

name: pythonでのCI(pytest)とCD

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
jobs:  
  build:
    runs-on: ubuntu-latest

    steps:          
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Install pipenv
        run: pip install pipenv
        
      - name: Sync Pipfile.lock dev
        run: pipenv sync --dev
        
      - name: Run UnitTest
        run: pipenv run test
        
      - name: わざと失敗
        run: exit 1

      # https://docs.github.com/ja/actions/guides/storing-workflow-data-as-artifacts#uploading-build-and-test-artifacts
#       - name: Archive UnitTest result of test
#         uses: actions/upload-artifact@v2
#         with:
#           name: upload UnitTest result of test
#           path: |
#             reports/test.html
#             reports/coverage/
            
      # テスト成功時はこちらのステップが実行される
      - name: Slack Notification on Success
        if: success()
#         uses: rtCamp/action-slack-notify@v2.0.2
#         env:
#            SLACK_CHANNEL: cicdのテスト
#            SLACK_TITLE: Test Success
#            SLACK_COLOR: good
#            SLACK_MESSAGE: 'Build Sucess!! :rocket:'
        run: |
          jq -n '{
            attachments: [{
              pretext: "Swagger が更新されたよ！",
              color: "good",
              title: "title test",
              title_link: "title test link"
            }]
          }' | curl -H 'Content-Type: application/json' -d @- ${{ secrets.SLACK_WEBHOOK_URL }}
           
      # テスト失敗時はこちらのステップが実行される
      - name: Slack Notification on Failure
#         uses: rtCamp/action-slack-notify@v2.0.2
        if: failure()
#         env:
#           SLACK_CHANNEL: ci
#           SLACK_TITLE: Test Failure
#           SLACK_COLOR: danger
#           SLACK_MESSAGE: 'Build Failer!!'
        run: |
          jq -n '{
            attachments: [{
              pretext: "Swagger が更新されなかった！",
              color: "danger",
              title: "title test faliure",
              title_link: "title test link faliure"
            }]
          }' | curl -H 'Content-Type: application/json' -d @- ${{ secrets.SLACK_WEBHOOK_URL }}
